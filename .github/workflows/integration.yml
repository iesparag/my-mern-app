name: Integration

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    
    - name: Create FE ENV file
      run: |
            cat <<EOF >frontend/.env
                REACT_APP_BACKEND_URL=http://localhost:8080/api/v1
            EOF

    - name: Create BE ENV file
      run: |
            cat <<EOF >backend/.env
                MONGODB_URI=${{ secrets.MONGODB_URI }}
                MONGODB_DEV_URI=${{ secrets.MONGODB_DEV_URI }}
                MONGODB_PROD_URI=${{ secrets.MONGODB_PROD_URI }}
            EOF

    - name: Build and test
      run: |
        docker-compose -f docker-compose.dev.yml up -d 
      working-directory: .

    - name: check logs of backend
      run: |
        sleep 20
        docker logs backend
      working-directory: .



    # - name: Build and test backend
    #   run: |
    #     docker-compose -f docker-compose.dev.yml up --build --abort-on-container-exit --exit-code-from backend
    #   working-directory: .

    - name: Cleanup frontend
      if: ${{ success() }}
      run: docker-compose -f docker-compose.dev.yml down
      working-directory: .

    - name: Cleanup backend
      if: ${{ success() }}
      run: docker-compose -f docker-compose.dev.yml down
      working-directory: .
